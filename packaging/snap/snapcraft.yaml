# snapcraft.yaml - packaging script for LogikSim
#
# This file has been modified.
# The original source code can be found here:
#
# URL: https://github.com/telegramdesktop/tdesktop/blob/dev/snap/snapcraft.yaml
# Date: Aug 4, 2024
# SHA:  9eb15f7b177589f33f8733d2807361276d160f7c
#
# This file is licensed under the GNU General Public License, version 3 (GPL-3.0).
# See https://github.com/telegramdesktop/tdesktop/blob/dev/LICENSE for more information.
#

name: logiksim
version: '2.3.0'
summary: Design and simulation circuits with predefined logic items.
description: |
  Design and simulation circuits with predefined logic items.
contact: https://github.com/christianbrugger/logiksim

base: core24
grade: stable
confinement: strict
compression: lzo

apps:
  logiksim:
    command: usr/bin/logiksim
    desktop: usr/share/applications/logiksim.desktop
    command-chain:
      - bin/desktop-launch
    plugs:
      - alsa
      - audio-playback
      - audio-record
      - camera
      - desktop
      - desktop-legacy
      - gsettings
      - hardware-observe
      - home
      - network
      - network-bind
      - network-status
      - opengl
      - removable-media
      - unity7
      - wayland
      - x11
    slots:
      - mpris

hooks:
  configure:
    command-chain:
      - bin/hooks-configure-desktop
    plugs:
      - desktop

plugs:
  desktop:
    mount-host-font-cache: false
  # Support for common GTK themes
  # https://forum.snapcraft.io/t/how-to-use-the-system-gtk-theme-via-the-gtk-common-themes-snap/6235
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

layout:
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa
  /usr/share/pipewire:
    bind: $SNAP/usr/share/pipewire
  /usr/share/X11:
    bind: $SNAP/usr/share/X11
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gtk-3.0:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gtk-3.0
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gtk-4.0:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gtk-4.0
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pipewire-0.3:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pipewire-0.3
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/spa-0.2:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/spa-0.2
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/webkitgtk-6.0:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/webkitgtk-6.0


parts:
  logiksim:
    plugin: nil
    source: https://github.com/christianbrugger/logiksim.git
    source-type: git
    source-submodules: []
    source-commit: bd7d97724e8703581a6c1becf6081a89b8186aee
    build-environment:
      - LD_LIBRARY_PATH: $CRAFT_STAGE/usr/lib:$CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
      - CC: clang-18
      - CXX: clang++-18
    build-packages:
      - python3.12
      - clang-18
      - llvm-18
      - ninja-build
    build-snaps:
      - cmake
    override-build: |
      echo ${CRAFT_PART_BUILD}

      # submodules
      cd ${CRAFT_PART_BUILD}
      python3.12 external/checkout.py

      # configure
      cd ${CRAFT_PART_BUILD}
      # disable LTO as it leads to coredump when running the snap
      # not sure why
      cmake --preset linux-clang-release \
        -DLS_ENABLE_LTO=OFF

      # build
      cd ${CRAFT_PART_BUILD}/build/linux-clang-release
      ninja ls_test_core ls_test_gui ls_gui

      # run test
      ./ls_test_core
      ./ls_test_gui
      
      # install
      mkdir -p "${CRAFT_PART_INSTALL}/usr/bin/"
      cp ls_gui "${CRAFT_PART_INSTALL}/usr/bin/logiksim"
      # cp ls_test_core "${CRAFT_PART_INSTALL}/usr/bin/ls_test_core"
      # cp ls_test_gui "${CRAFT_PART_INSTALL}/usr/bin/ls_test_gui"
      cp -r resources "${CRAFT_PART_INSTALL}/usr/bin/"
    after:
      - qt
  
  logiksim-meta:
    plugin: nil
    override-build: |
      mkdir -p "${CRAFT_PART_INSTALL}/usr/share/applications"
      cp "${CRAFT_PROJECT_DIR}/resources/icons/derivative/app_icon.svg" \
        "${CRAFT_PART_INSTALL}/usr/share/applications/logiksim.svg"
      cp "${CRAFT_PROJECT_DIR}/packaging/linux/logiksim.desktop" \
        "${CRAFT_PART_INSTALL}/usr/share/applications/logiksim.desktop"
    after:
      - desktop-qt
      

  desktop-qt:
    source: https://github.com/desktop-app/snapcraft-desktop-helpers.git
    source-depth: 1
    source-subdir: qt
    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-environment:
      - LD_LIBRARY_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
    build-packages:
      - build-essential
      - dpkg-dev
      - gtk-update-icon-cache
      - libglib2.0-bin
      - libgtk-3-0t64
    stage-packages:
      - libc-bin
      - libgdk-pixbuf-2.0-0
      - libnvidia-egl-wayland1
      - libxkbcommon0
      - locales-all
      - shared-mime-info
      - xdg-user-dirs
    override-prime: |
      craftctl default
      update-mime-database usr/share/mime
      glib-compile-schemas usr/share/glib-2.0/schemas
      for theme in usr/share/icons/*; do
        if [ -f "$theme/index.theme" ] && [ ! -f "$theme/icon-theme.cache" ]; then
          update-icon-caches "$theme"
        fi
      done
      GTK_PATH=$PWD/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gtk-3.0 /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libgtk-3-0t64/gtk-query-immodules-3.0 > usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gtk-3.0/3.0.0/immodules/immodules.cache
    after:
      - logiksim


  qt:
    plugin: nil
    build-packages:
      - python3.12
      - python3-venv
    stage-packages:
      - libgl1
      ## 
      - libdbus-1-3     #
      - libegl1         #
      - libfontconfig1  #
      - libfreetype6    #
      - libglib2.0-0t64 #
      - libglx0         #
      # - libgtk-3-0t64
      - libharfbuzz0b   #
      - libice6         #
      - libicu74        #
      # - liblcms2-2
      - libopengl0      #
      - libpcre2-16-0   #
      - libpng16-16t64  #
      - libsm6          #
      # - libssl3t64
      # - libvulkan1
      - libwayland-client0
      - libwayland-cursor0
      # - libwayland-egl1
      # - libwayland-server0

      - libx11-6     #
      - libx11-xcb1  #

      - libxcb1              #
      - libxcb-cursor0       #
      - libxcb-glx0          #
      - libxcb-icccm4        #
      - libxcb-image0        #
      - libxcb-keysyms1      #
      - libxcb-randr0        #
      - libxcb-render0       #
      - libxcb-render-util0  #
      - libxcb-shape0        #
      - libxcb-shm0          #
      - libxcb-sync1         #
      # - libxcb-util1
      - libxcb-xfixes0       #
      - libxcb-xkb1          #

      - libxkbcommon0      #
      - libxkbcommon-x11-0 #

      - zlib1g

      # - mesa-vulkan-drivers
      # - xkb-data

    override-build: |
      QT=6.8.1

      echo ${CRAFT_PART_BUILD}
      cd ${CRAFT_PART_BUILD}

      # install python package
      python3 -m venv env
      . env/bin/activate
      python3 -m pip install --upgrade pip
      python3 -m pip install aqtinstall

      # download Qt
      . env/bin/activate
      aqt install-qt \
        linux desktop ${QT} linux_gcc_64 \
        --archives icu qtbase qtsvg qtwayland

      # list files
      du -hs ${QT}/gcc_64/*

      # copy to target
      cp -r ${QT}/gcc_64/* ${CRAFT_PART_INSTALL}/usr

    prime:
      - -./usr/bin
      - -./usr/doc
      - -./usr/include
      - -./usr/lib/cmake
      - -./usr/lib/pkgconfig
      - -./usr/lib/*.a
      - -./usr/lib/*.prl
      - -./usr/lib/*.so
      - -./usr/libexec
      - -./usr/metatypes
      - -./usr/mkspecs
      - -./usr/modules
      - -./usr/plugins/sqldrivers
      - -./usr/qml
      - -./usr/sbom
      # unused Qt libraries
      - -./usr/libQt6Concurrent*
      - -./usr/libQt6OpenGLWidgets*
      - -./usr/libQt6Sql*
      - -./usr/libQt6SvgWidgets*
      - -./usr/libQt6Test*
      - -./usr/libQt6Xml*


