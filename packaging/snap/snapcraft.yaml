# snapcraft.yaml - packaging script for LogikSim

name: logiksim
version: '2.3.0'
summary: Design and simulation circuits with predefined logic items.
description: |
  Design and simulation circuits with predefined logic items.
contact: https://github.com/christianbrugger/logiksim

base: core24
grade: stable
confinement: strict
compression: lzo

apps:
  logiksim:
    command: usr/bin/logiksim
    desktop: usr/share/applications/logiksim.desktop
    # https://snapcraft.io/docs/gnome-extension
    extensions: [gnome]
    plugs:
      - home
      - removable-media

parts:
  qt:
    plugin: nil
    build-packages:
      - python3.12
      - python3-venv
    override-build: |
      QT=6.8.1

      echo ${CRAFT_PART_BUILD}
      cd ${CRAFT_PART_BUILD}

      # install python package
      python3 -m venv env
      . env/bin/activate
      python3 -m pip install --upgrade pip
      python3 -m pip install aqtinstall

      # download Qt
      . env/bin/activate
      aqt install-qt \
        linux desktop ${QT} linux_gcc_64 \
        --archives icu qtbase qtsvg qtwayland

      # list files
      du -hs ${QT}/gcc_64/*

      # copy to target
      mkdir -p ${CRAFT_PART_INSTALL}/usr
      cp -r ${QT}/gcc_64/* ${CRAFT_PART_INSTALL}/usr

    prime:
      - -./usr/bin
      - -./usr/doc
      - -./usr/include
      - -./usr/lib/cmake
      - -./usr/lib/pkgconfig
      - -./usr/lib/*.a
      - -./usr/lib/*.prl
      - -./usr/lib/*.so
      - -./usr/libexec
      - -./usr/metatypes
      - -./usr/mkspecs
      - -./usr/modules
      - -./usr/qml
      - -./usr/sbom
      # unused Qt libraries
      - -./usr/lib/libQt6Concurrent*
      - -./usr/lib/libQt6OpenGLWidgets*
      - -./usr/lib/libQt6PrintSupport*
      - -./usr/lib/libQt6Sql*
      - -./usr/lib/libQt6SvgWidgets*
      - -./usr/lib/libQt6Test*
      - -./usr/lib/libQt6Xml*
      # unused plugins
      - -./usr/plugins/sqldrivers
      - -./usr/plugins/printsupport
      # unused dependencies
      - -./usr/lib/libicuio*
      - -./usr/lib/libicutest*
      - -./usr/lib/libicutu*
      # unknown artefacts
      - -./usr/lib/objects-RelWithDebInfo


  logiksim:
    plugin: nil
    source: https://github.com/christianbrugger/logiksim.git
    source-type: git
    source-submodules: []
    source-commit: 99ed0f6e40249a2417591a0217289251c22b1090
    build-environment:
      - CC: clang-18
      - CXX: clang++-18
      - LD_LIBRARY_PATH: $CRAFT_STAGE/usr/lib:$CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
      - CMAKE_PREFIX_PATH: /snap/gnome-46-2404-sdk/current/usr${CMAKE_PREFIX_PATH:+:$CMAKE_PREFIX_PATH}
    build-packages:
      - python3.12
      - clang-18
      - llvm-18
      - ninja-build
    build-snaps:
      - cmake
    override-build: |
      echo ${CRAFT_PART_BUILD}

      # submodules
      cd ${CRAFT_PART_BUILD}
      python3.12 external/checkout.py

      # configure
      cd ${CRAFT_PART_BUILD}
      # disable LTO as it leads to coredump when running the snap not sure why
      cmake --preset linux-clang-release \
        -DLS_ENABLE_LTO=OFF

      # build
      cd ${CRAFT_PART_BUILD}/build/linux-clang-release
      ninja ls_test_core ls_test_gui ls_gui

      # run test
      ./ls_test_core
      ./ls_test_gui

      # install
      mkdir -p "${CRAFT_PART_INSTALL}/usr/bin/"
      cp ls_gui "${CRAFT_PART_INSTALL}/usr/bin/logiksim"
      # cp ls_test_core "${CRAFT_PART_INSTALL}/usr/bin/ls_test_core"
      # cp ls_test_gui "${CRAFT_PART_INSTALL}/usr/bin/ls_test_gui"
      cp -r resources "${CRAFT_PART_INSTALL}/usr/bin/"

    # COMPILE JUST THE SAMPLE APPLICATION
    # THIS IS FOR FAST DEBUGGING -> cooment out above

    # override-build: |
    #   env
    #
    #   echo ${CRAFT_PART_BUILD}
    #   cd ${CRAFT_PART_BUILD}
    #
    #   # configure
    #   # disable LTO as it leads to coredump when running the snap, not sure why
    #   cmake --preset linux-clang-gui-release \
    #     -DLS_ENABLE_LTO=OFF
    #
    #   # build
    #   cd ${CRAFT_PART_BUILD}/build/linux-clang-gui-release
    #   ninja ls_gui_sample
    #
    #   # install
    #   mkdir -p "${CRAFT_PART_INSTALL}/usr/bin/"
    #   cp ls_gui_sample "${CRAFT_PART_INSTALL}/usr/bin/logiksim"
    
    after:
      - qt
    prime:
      - -./usr/bin/resources/CMakeFiles
      - -./usr/bin/resources/cmake_install.cmake


  qt-runtime-packages:
    plugin: nil
    stage-packages:
      # Packages required by Qt, not provided by Gnome extension.
      # Collected based on snap lint warnings at the end of building without them.
      # Added at the end, so they can changed easily, without rebuilding logiksim.
      - libxcb-cursor0
      - libxcb-icccm4
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-render-util0
      - libxcb-shape0
    after:
      - logiksim


  logiksim-meta:
    plugin: nil
    override-build: |
      mkdir -p "${CRAFT_PART_INSTALL}/usr/share/applications"
      cp "${CRAFT_PROJECT_DIR}/resources/icons/derivative/app_icon.svg" \
        "${CRAFT_PART_INSTALL}/usr/share/applications/logiksim.svg"
      cp "${CRAFT_PROJECT_DIR}/packaging/linux/logiksim.desktop" \
        "${CRAFT_PART_INSTALL}/usr/share/applications/logiksim.desktop"
    after:
      - logiksim


